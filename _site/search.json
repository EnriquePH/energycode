[
  {
    "objectID": "TODO.html",
    "href": "TODO.html",
    "title": "energycode.org TODO.md",
    "section": "",
    "text": "energycode.org TODO.md\n\nTodo\n\nOEIS.R package\n\n\n\nIn Progress\n\nPost about blog features\n\n\n\nDone\n\nAdd analytics\nDesign a blog logo\nR package marketconf project\nTesting analytics\nPost Nympy to LaTeX\nfavicon.ico\nProject Holocene Volcanic Eruptions"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "Convert Numpy array to LaTeX\n\n\n\npython\n\n\nnumpy\n\n\nlatex\n\n\n\nLaTeX matrices and determinants from numpy arrays\n\n\n\nEnrique Pérez Herrero\n\n\nAug 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfusion Matrix in R\n\n\n\nR\n\n\ncode\n\n\nmachine learning\n\n\n\nPlotting the Confusion Matrix with ggplot and R\n\n\n\nEnrique Pérez Herrero\n\n\nMar 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMax Determinant\n\n\n\nmath\n\n\nlinear algebra\n\n\ndeterminant\n\n\n\nDeterminants of special square matrices with elements being the maximum or minimum between the indices of the elements.\n\n\n\nEnrique Pérez Herrero\n\n\nMar 5, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/02-marketconf-package/index.html",
    "href": "projects/02-marketconf-package/index.html",
    "title": "Stock Market Confidence Indexes",
    "section": "",
    "text": "The R package marketconf reads data on U. S. Stock Market Confidence Indexes from the Yale School of Management’s International Center for Finance web page.\nThis package is designed for stock market prediction and risk valuation, and it is compatible with other packages like:\nquantmod, TTR or tidyquant\n\n\n\n\nCode\nlibrary(devtools)\ndevtools::install_github(\"EnriquePH/marketconf\")\n\n\n\n\n\n\n\nThe four U.S. stock market confidence indices are derived monthly from survey data on investors’ behavior. These indices are:\n\n\nCode\nlibrary(marketconf)\nlibrary(knitr)\nkable(US_confidence_indices()[c(1, 3, 4)])\n\n\n\n\n\n\n\n\n\n\nSymbol\nDescription\nInfo\n\n\n\n\nUS1YI\nU.S. One Year Confidence Index\nThe percent of the population expecting an increase in the Dow in the coming year.\n\n\nUSVI\nU.S. Valuation Confidence Index\nThe percent of the population who think that the market is not too high.\n\n\nUSBODI\nU.S. Buy-On-Dips Confidence Index\nThe percent of the population expecting a rebound the next day should the market ever drop 3% in one day.\n\n\nUSCI\nU.S. Crash Confidence Index\nThe percent of the population who attach little probability to a stock market crash in the next-six months.\n\n\n\n\n\n\n\n\nThis is a basic example that plots the U.S. Valuation Confidence Index:\n\n\nCode\nlibrary(ggplot2)\n\nindex_symbol &lt;- \"USVI\"\nindex_df &lt;- get_index(index_symbol)\n\nggplot(index_df, aes(x = Date, y = USVI.Value, color = Investor)) +\n  geom_line() +\n  ggtitle(get_index_description(index_symbol))\n\n\n\n\n\n\n\n\n\nThe markerconf package is licensed under the MIT License (MIT), but the Stock Market Confidence Indexes are produced and copyrighted by the International Center of Finance at the Yale School of Management. Please refer to the TERMS OF USE on Yale University’s web page for further information.\n\n\n\n\nGithub marketconf R package"
  },
  {
    "objectID": "projects/02-marketconf-package/index.html#package-installation",
    "href": "projects/02-marketconf-package/index.html#package-installation",
    "title": "Stock Market Confidence Indexes",
    "section": "",
    "text": "Code\nlibrary(devtools)\ndevtools::install_github(\"EnriquePH/marketconf\")"
  },
  {
    "objectID": "projects/02-marketconf-package/index.html#examples",
    "href": "projects/02-marketconf-package/index.html#examples",
    "title": "Stock Market Confidence Indexes",
    "section": "",
    "text": "The four U.S. stock market confidence indices are derived monthly from survey data on investors’ behavior. These indices are:\n\n\nCode\nlibrary(marketconf)\nlibrary(knitr)\nkable(US_confidence_indices()[c(1, 3, 4)])\n\n\n\n\n\n\n\n\n\n\nSymbol\nDescription\nInfo\n\n\n\n\nUS1YI\nU.S. One Year Confidence Index\nThe percent of the population expecting an increase in the Dow in the coming year.\n\n\nUSVI\nU.S. Valuation Confidence Index\nThe percent of the population who think that the market is not too high.\n\n\nUSBODI\nU.S. Buy-On-Dips Confidence Index\nThe percent of the population expecting a rebound the next day should the market ever drop 3% in one day.\n\n\nUSCI\nU.S. Crash Confidence Index\nThe percent of the population who attach little probability to a stock market crash in the next-six months.\n\n\n\n\n\n\n\n\nThis is a basic example that plots the U.S. Valuation Confidence Index:\n\n\nCode\nlibrary(ggplot2)\n\nindex_symbol &lt;- \"USVI\"\nindex_df &lt;- get_index(index_symbol)\n\nggplot(index_df, aes(x = Date, y = USVI.Value, color = Investor)) +\n  geom_line() +\n  ggtitle(get_index_description(index_symbol))"
  },
  {
    "objectID": "projects/02-marketconf-package/index.html#license",
    "href": "projects/02-marketconf-package/index.html#license",
    "title": "Stock Market Confidence Indexes",
    "section": "",
    "text": "The markerconf package is licensed under the MIT License (MIT), but the Stock Market Confidence Indexes are produced and copyrighted by the International Center of Finance at the Yale School of Management. Please refer to the TERMS OF USE on Yale University’s web page for further information."
  },
  {
    "objectID": "projects/02-marketconf-package/index.html#links",
    "href": "projects/02-marketconf-package/index.html#links",
    "title": "Stock Market Confidence Indexes",
    "section": "",
    "text": "Github marketconf R package"
  },
  {
    "objectID": "projects/03-Holocene_Volcanic_Eruptions/index.html",
    "href": "projects/03-Holocene_Volcanic_Eruptions/index.html",
    "title": "Volcanic Eruptions in the Holocene Period",
    "section": "",
    "text": "Volcán de Teneguía (La Palma)"
  },
  {
    "objectID": "projects/03-Holocene_Volcanic_Eruptions/index.html#data-source",
    "href": "projects/03-Holocene_Volcanic_Eruptions/index.html#data-source",
    "title": "Volcanic Eruptions in the Holocene Period",
    "section": "Data source",
    "text": "Data source\nThe Smithsonian Institution’s Global Volcanism Program (GVP) documents Earth’s volcanoes and their eruptive history The Volcanoes of the World database is a catalog of Holocene and Pleistocene volcanoes, and eruptions from the past 12,000 years in the Holocene period. The GVP database includes the names, locations, types, and features of more than 1,500 volcanoes with eruptions during the Holocene period or exhibiting current unrest."
  },
  {
    "objectID": "projects/03-Holocene_Volcanic_Eruptions/index.html#eda-exploratory-data-analysis-notebook",
    "href": "projects/03-Holocene_Volcanic_Eruptions/index.html#eda-exploratory-data-analysis-notebook",
    "title": "Volcanic Eruptions in the Holocene Period",
    "section": "EDA (Exploratory Data Analysis) Notebook",
    "text": "EDA (Exploratory Data Analysis) Notebook\nThis kernel tidies GVP data by performing some simplifications on the main variables. Additionally, it tests distinct map plotting systems in R to visualize and explore the data effectively."
  },
  {
    "objectID": "projects/03-Holocene_Volcanic_Eruptions/index.html#comments",
    "href": "projects/03-Holocene_Volcanic_Eruptions/index.html#comments",
    "title": "Volcanic Eruptions in the Holocene Period",
    "section": "Comments",
    "text": "Comments\nThis kaggle notebook is mentioned in the Hidden Gems: A Collection of Underrated Notebooks Volume 61 - 2021-07-06\n“A well-designed analysis of volcano activity that features a clear structure, clean code, and a set of great interactive visuals.”"
  },
  {
    "objectID": "projects/03-Holocene_Volcanic_Eruptions/index.html#links",
    "href": "projects/03-Holocene_Volcanic_Eruptions/index.html#links",
    "title": "Volcanic Eruptions in the Holocene Period",
    "section": "Links",
    "text": "Links\n\nkaggle - Holocene Volcanic Eruptions: Data Exploration\nkaggle - Hidden Gems: A Collection of Underrated Notebooks\nkaggle - Dataset: Volcanic Eruptions in the Holocene Period\nSmithsonian Institution’s Global Volcanism Program (GVP)"
  },
  {
    "objectID": "posts/09032022-Confusion-Matrix/index.html",
    "href": "posts/09032022-Confusion-Matrix/index.html",
    "title": "Confusion Matrix in R",
    "section": "",
    "text": "The confusion matrix allows visualization of the performance of a classification algorithm.\nIn this blog post, a function is shown to create an image of the confusion matrix.\nThe R package caret includes the confusionMatrix function, which provides a comprehensive output.\n\nCodelibrary(e1071)\nlibrary(caTools)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(caret)\n\n\n\nWe will perform a Naive Bayes classification on the classical iris data set.\n\nCode# train and test data\niris$spl &lt;- caTools::sample.split(iris, SplitRatio = 0.8)\ntrain &lt;- subset(iris, iris$spl == TRUE)\ntest &lt;- subset(iris, iris$spl == FALSE)\n\niris_nb &lt;- naiveBayes(Species ~ ., data = train)\nnb_train_predict &lt;- predict(iris_nb, test[, names(test) != \"Species\"])\n\ncfm &lt;- confusionMatrix(nb_train_predict, test$Species)\ncfm\n\nConfusion Matrix and Statistics\n\n            Reference\nPrediction   setosa versicolor virginica\n  setosa         10          0         0\n  versicolor      0          9         0\n  virginica       0          1        10\n\nOverall Statistics\n                                          \n               Accuracy : 0.9667          \n                 95% CI : (0.8278, 0.9992)\n    No Information Rate : 0.3333          \n    P-Value [Acc &gt; NIR] : 2.963e-13       \n                                          \n                  Kappa : 0.95            \n                                          \n Mcnemar's Test P-Value : NA              \n\nStatistics by Class:\n\n                     Class: setosa Class: versicolor Class: virginica\nSensitivity                 1.0000            0.9000           1.0000\nSpecificity                 1.0000            1.0000           0.9500\nPos Pred Value              1.0000            1.0000           0.9091\nNeg Pred Value              1.0000            0.9524           1.0000\nPrevalence                  0.3333            0.3333           0.3333\nDetection Rate              0.3333            0.3000           0.3333\nDetection Prevalence        0.3333            0.3000           0.3667\nBalanced Accuracy           1.0000            0.9500           0.9750\n\n\n\nTo plot the obtained confusion matrix as a ggplot graphic, we will use the following function:\n\nCodeggplot_confusion_matrix &lt;- function(cfm) {\n  mytitle &lt;- paste(\"Accuracy\", percent_format() (cfm$overall[1]),\n                   \"Kappa\", percent_format() (cfm$overall[2]))\n  p &lt;-\n    ggplot(data = as.data.frame(cfm$table),\n           aes(x = Reference, y = Prediction)) +\n    geom_tile(aes(fill = log(Freq)), colour = \"white\") +\n    scale_fill_gradient(low = \"white\", high = \"steelblue\") +\n    geom_text(aes(x = Reference, y = Prediction, label = Freq)) +\n    theme(legend.position = \"none\") +\n    ggtitle(mytitle)\n  return(p)\n}\n\n\n\nCodeggplot_confusion_matrix(cfm)\n\n\n\n\n\n\nStackOverflow: How to produce a confusion matrix and find the misclassification rate of the Naïve Bayes Classifier?"
  },
  {
    "objectID": "posts/09032022-Confusion-Matrix/index.html#classification",
    "href": "posts/09032022-Confusion-Matrix/index.html#classification",
    "title": "Confusion Matrix in R",
    "section": "",
    "text": "We will perform a Naive Bayes classification on the classical iris data set.\n\nCode# train and test data\niris$spl &lt;- caTools::sample.split(iris, SplitRatio = 0.8)\ntrain &lt;- subset(iris, iris$spl == TRUE)\ntest &lt;- subset(iris, iris$spl == FALSE)\n\niris_nb &lt;- naiveBayes(Species ~ ., data = train)\nnb_train_predict &lt;- predict(iris_nb, test[, names(test) != \"Species\"])\n\ncfm &lt;- confusionMatrix(nb_train_predict, test$Species)\ncfm\n\nConfusion Matrix and Statistics\n\n            Reference\nPrediction   setosa versicolor virginica\n  setosa         10          0         0\n  versicolor      0          9         0\n  virginica       0          1        10\n\nOverall Statistics\n                                          \n               Accuracy : 0.9667          \n                 95% CI : (0.8278, 0.9992)\n    No Information Rate : 0.3333          \n    P-Value [Acc &gt; NIR] : 2.963e-13       \n                                          \n                  Kappa : 0.95            \n                                          \n Mcnemar's Test P-Value : NA              \n\nStatistics by Class:\n\n                     Class: setosa Class: versicolor Class: virginica\nSensitivity                 1.0000            0.9000           1.0000\nSpecificity                 1.0000            1.0000           0.9500\nPos Pred Value              1.0000            1.0000           0.9091\nNeg Pred Value              1.0000            0.9524           1.0000\nPrevalence                  0.3333            0.3333           0.3333\nDetection Rate              0.3333            0.3000           0.3333\nDetection Prevalence        0.3333            0.3000           0.3667\nBalanced Accuracy           1.0000            0.9500           0.9750"
  },
  {
    "objectID": "posts/09032022-Confusion-Matrix/index.html#plotting",
    "href": "posts/09032022-Confusion-Matrix/index.html#plotting",
    "title": "Confusion Matrix in R",
    "section": "",
    "text": "To plot the obtained confusion matrix as a ggplot graphic, we will use the following function:\n\nCodeggplot_confusion_matrix &lt;- function(cfm) {\n  mytitle &lt;- paste(\"Accuracy\", percent_format() (cfm$overall[1]),\n                   \"Kappa\", percent_format() (cfm$overall[2]))\n  p &lt;-\n    ggplot(data = as.data.frame(cfm$table),\n           aes(x = Reference, y = Prediction)) +\n    geom_tile(aes(fill = log(Freq)), colour = \"white\") +\n    scale_fill_gradient(low = \"white\", high = \"steelblue\") +\n    geom_text(aes(x = Reference, y = Prediction, label = Freq)) +\n    theme(legend.position = \"none\") +\n    ggtitle(mytitle)\n  return(p)\n}\n\n\n\nCodeggplot_confusion_matrix(cfm)"
  },
  {
    "objectID": "posts/09032022-Confusion-Matrix/index.html#links",
    "href": "posts/09032022-Confusion-Matrix/index.html#links",
    "title": "Confusion Matrix in R",
    "section": "",
    "text": "StackOverflow: How to produce a confusion matrix and find the misclassification rate of the Naïve Bayes Classifier?"
  },
  {
    "objectID": "posts/05032022-Max-Determinant/index.html",
    "href": "posts/05032022-Max-Determinant/index.html",
    "title": "Max Determinant",
    "section": "",
    "text": "Plot3D of max matrix elements"
  },
  {
    "objectID": "posts/05032022-Max-Determinant/index.html#identity",
    "href": "posts/05032022-Max-Determinant/index.html#identity",
    "title": "Max Determinant",
    "section": "Identity",
    "text": "Identity\nThe sequence A181983(n) gives the determinants of the square matrices: \\(M_{n}\\), with elements \\(m_{i,j}= \\max(i,j)\\), where \\(\\max\\) the is the maximum function.\nThis identity appears as follows:\n\\[\\begin{equation}\ndet{\\bigg[ max(i,j) \\bigg] }_{1\\leq i,j \\leq n} = -n \\cdot {(-1)}^{n} = A181983(n)\n\\end{equation}\\]"
  },
  {
    "objectID": "posts/05032022-Max-Determinant/index.html#proof",
    "href": "posts/05032022-Max-Determinant/index.html#proof",
    "title": "Max Determinant",
    "section": "Proof",
    "text": "Proof\nA new matrix with the same determinant can be created by subtracting row \\(i\\) from row \\(i+1\\) starting from the 2nd row. The determinant of this new matrix can then be computed easily using the expansion by minors technique at element \\(m_{1,n}\\)\nThis can be better illustrated with an example:\nWe can transform:\n\\[\\begin{equation}\nM_{10} = \\left(\\begin{array}{cccccccccc}\n1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 \\\\\n2 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 \\\\\n3 & 3 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 \\\\\n4 & 4 & 4 & 4 & 5 & 6 & 7 & 8 & 9 & 10 \\\\\n5 & 5 & 5 & 5 & 5 & 6 & 7 & 8 & 9 & 10 \\\\\n6 & 6 & 6 & 6 & 6 & 6 & 7 & 8 & 9 & 10 \\\\\n7 & 7 & 7 & 7 & 7 & 7 & 7 & 8 & 9 & 10 \\\\\n8 & 8 & 8 & 8 & 8 & 8 & 8 & 8 & 9 & 10 \\\\\n9 & 9 & 9 & 9 & 9 & 9 & 9 & 9 & 9 & 10 \\\\\n10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10\n\\end{array} \\right)\n\\end{equation}\\]\nInto:\n\\[\\begin{equation}\nM^{*}_{10} =\\left(\\begin{array}{cccccccccc}\n1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 \\\\\n1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n1 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n1 & 1 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n1 & 1 & 1 & 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n1 & 1 & 1 & 1 & 1 & 0 & 0 & 0 & 0 & 0 \\\\\n1 & 1 & 1 & 1 & 1 & 1 & 0 & 0 & 0 & 0 \\\\\n1 & 1 & 1 & 1 & 1 & 1 & 1 & 0 & 0 & 0 \\\\\n1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 0 & 0 \\\\\n1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 0 \\end{array} \\right)\n\\end{equation}\\]\nThis proof can be generalized to a very similar kind of matrices, resulting in:\n\\[\\begin{equation}\ndet{\\bigg[ max(i,j)^k \\bigg]}_{1\\leq i,j \\leq n} = {(-1)}^{n-1} \\cdot n^{k} \\cdot \\prod_{s=1}^{n-1}{(s+1)^k-s^k}\n\\end{equation}\\]\n\\[\\begin{equation}\ndet{\\bigg[ min(i,j)^k \\bigg]}_{1\\leq i,j \\leq n} = \\prod_{s=1}^{n-1}{(s+1)^k-s^k}\n\\end{equation}\\]"
  },
  {
    "objectID": "posts/05032022-Max-Determinant/index.html#references",
    "href": "posts/05032022-Max-Determinant/index.html#references",
    "title": "Max Determinant",
    "section": "References",
    "text": "References\n\n\n[1] N. J. A. Sloane, “A051125: Table t(n,k) = maxn,k read by antidiagonals (n &gt;= 1, k &gt;= 1).” Available: https://oeis.org/A051125/\n\n\n[2] M. Somos, “A181983: A(n) = (-1)^(n+1) * n.” 2012. Available: https://oeis.org/A181983/\n\n\n[3] E. Deutsch, “A161124: Number of inversions in all fixed-point-free involutions of 1,2,...,2n.” Jun. 2009. Available: https://oeis.org/A161124/\n\n\n[4] N. J. A. Sloane, “A001147: Double factorial of odd numbers: A(n) = (2*n-1)!! = 1*3*5*...*(2*n-1).” Available: https://oeis.org/A001147/"
  },
  {
    "objectID": "posts/02082023-Numpy-LaTeX/index.html",
    "href": "posts/02082023-Numpy-LaTeX/index.html",
    "title": "Convert Numpy array to LaTeX",
    "section": "",
    "text": "Sierra de las Nieves (Málaga)"
  },
  {
    "objectID": "posts/02082023-Numpy-LaTeX/index.html#functions-for-matrices-and-determinants",
    "href": "posts/02082023-Numpy-LaTeX/index.html#functions-for-matrices-and-determinants",
    "title": "Convert Numpy array to LaTeX",
    "section": "Functions for matrices and determinants",
    "text": "Functions for matrices and determinants\nThe functions matrix2latex and det2latex return an indented \\(LaTeX\\) string that can be copied or rendered in your math article.\nThe parameter INDENT_SPACES controls the number of indentation spaces.\n\n\nCode\nimport numpy as np\n\nINDENT_SPACES = 3\n\ndef indent(num_indent=1):\n    \"\"\"\n    Number of indentation spaces\n    \"\"\"\n    return num_indent * INDENT_SPACES * \" \"\n\ndef matrix2latex(matrix):\n    \"\"\"\n    Convert numpy array to latex code as a matrix\n    \"\"\"\n    left_latex = r\"\\left(\" + \"\\n\" + indent(1) + r\"\\begin{array}\"\n    right_latex = indent(1) + r\"\\end{array}\" + \"\\n\" + r\"\\right)\"\n    m_cols = matrix.shape[1]\n    array_cols = \"{\" + \"r\" * m_cols + \"}\\n\"\n    elements_latex = \"\"\n    for row in matrix:\n        elements_latex = \\\n          elements_latex + indent(2) + \" & \".join([str(x) for x in row]) + \\\n            r\" \\\\ \" + \"\\n\"\n    latex = left_latex + array_cols + elements_latex + right_latex\n    return f\"$$\\n{latex}\\n$$\"\n\ndef det2latex(matrix):\n    \"\"\"\n    Convert numpy array to latex code as a determinant\n    \"\"\"\n    left_latex = r\"\\begin{vmatrix}\" + \"\\n\"\n    right_latex = r\"\\end{vmatrix}\"\n    m_cols = matrix.shape[1]\n    elements_latex = \"\"\n    for row in matrix:\n        elements_latex = \\\n          elements_latex + indent(1) + \" & \".join([str(x) for x in row]) + \\\n            r\" \\\\ \" + \"\\n\"\n    latex = left_latex + elements_latex + right_latex\n    return f\"$$\\n{latex}\\n$$\"\n\n\n\nOutput string\nWith the NumPy function np.eye, we can create an identity matrix of the desired dimensions, and this seems to be a good way to test our functions.\n\n\nCode\nprint(matrix2latex(np.eye(3, dtype=int)))\n\n\n$$\n\\left(\n   \\begin{array}{rrr}\n      1 & 0 & 0 \\\\ \n      0 & 1 & 0 \\\\ \n      0 & 0 & 1 \\\\ \n   \\end{array}\n\\right)\n$$"
  },
  {
    "objectID": "posts/02082023-Numpy-LaTeX/index.html#rendering-the-output-in-a-document",
    "href": "posts/02082023-Numpy-LaTeX/index.html#rendering-the-output-in-a-document",
    "title": "Convert Numpy array to LaTeX",
    "section": "Rendering the output in a document",
    "text": "Rendering the output in a document\nIf you are working within a Jupyter notebook you can render a latex string with the aid of the Math function included in the IPython library, which can be imported with:\n\n\nCode\nfrom IPython.display import Math\n\n\nBut if you are coding a Python chunk in a Quarto file on RStudio, you need to add the option #| output: asis at the top of the code chunk. This option controls how the output is rendered in the final document.\n\nCode\nprint(det2latex(np.eye(3, dtype=int)))\n\n\\[\n\\begin{vmatrix}\n   1 & 0 & 0 \\\\\n   0 & 1 & 0 \\\\\n   0 & 0 & 1 \\\\\n\\end{vmatrix}\n\\]\n\nCode\n# Identity 4x4 matrix\nidentity_4 = np.eye(4, dtype=int)\nidentity_4_latex = r\"$$I_4 = \" + f\"{matrix2latex(identity_4)}\"[2:]\nprint(identity_4_latex)\n\n\\[I_4 =\n\\left(\n   \\begin{array}{rrrr}\n      1 & 0 & 0 & 0 \\\\\n      0 & 1 & 0 & 0 \\\\\n      0 & 0 & 1 & 0 \\\\\n      0 & 0 & 0 & 1 \\\\\n   \\end{array}\n\\right)\n\\]"
  },
  {
    "objectID": "posts/02082023-Numpy-LaTeX/index.html#rendering-the-output-in-a-file",
    "href": "posts/02082023-Numpy-LaTeX/index.html#rendering-the-output-in-a-file",
    "title": "Convert Numpy array to LaTeX",
    "section": "Rendering the output in a file",
    "text": "Rendering the output in a file\nThe \\(LaTeX\\) string can be rendered and saved into a file with the aid of the following function, based on the library sympy.\n\n\nCode\nfrom sympy import preview\n\ndef latex2png(latex, filename, fontsize=300):\n    \"\"\"\n    Render latex code to png image\n    \"\"\"\n    return preview(latex,\n                   viewer='file',\n                   filename=filename,\n                   euler=False,\n                   dvioptions=['-D', f'{str(fontsize)}'])"
  },
  {
    "objectID": "posts/02082023-Numpy-LaTeX/index.html#other-automated-matrices",
    "href": "posts/02082023-Numpy-LaTeX/index.html#other-automated-matrices",
    "title": "Convert Numpy array to LaTeX",
    "section": "Other automated matrices",
    "text": "Other automated matrices\n\nMatrices with numbered elements\n\n\nCode\ndef element_matrix(n, notation=r\"x\"):\n    \"\"\"\n    Matrix with algebraic notation elements \n    \"\"\"\n    vec_function = \\\n      np.vectorize(lambda i, j: notation + \"_{\" + f\"{i + 1}{j + 1}\" + \"}\")\n    return np.fromfunction(vec_function,\n                           shape=(n, n),\n                           dtype=int)\n\n\n\nCode\nprint(matrix2latex(element_matrix(5, notation=r\"\\theta\")))\n\n\\[\n\\left(\n   \\begin{array}{rrrrr}\n      \\theta_{11} & \\theta_{12} & \\theta_{13} & \\theta_{14} & \\theta_{15} \\\\\n      \\theta_{21} & \\theta_{22} & \\theta_{23} & \\theta_{24} & \\theta_{25} \\\\\n      \\theta_{31} & \\theta_{32} & \\theta_{33} & \\theta_{34} & \\theta_{35} \\\\\n      \\theta_{41} & \\theta_{42} & \\theta_{43} & \\theta_{44} & \\theta_{45} \\\\\n      \\theta_{51} & \\theta_{52} & \\theta_{53} & \\theta_{54} & \\theta_{55} \\\\\n   \\end{array}\n\\right)\n\\]\n\n\nTriangular matrices\n\nUpper Triangular Matrix: In an upper triangular matrix, all elements below the main diagonal (elements that lie on or below the main diagonal) are zeros.\nLower Triangular Matrix: In a lower triangular matrix, all elements above the main diagonal (elements that lie on or above the main diagonal) are zeros\n\n\n\nCode\ndef up_triangular_matrix(n):\n    \"\"\"\n    Upper Triangular matrix filled with ones and zeroes\n    \"\"\"\n    return np.fromfunction(lambda i, j:  1 * np.less_equal(i , j),\n                           shape=(n, n),\n                           dtype=int)\n\n\n\nLower Triangular Matrix: In a lower triangular matrix, all elements above the main diagonal (elements that lie on or above the main diagonal) are zeros\n\n\n\nCode\ndef lw_triangular_matrix(n):\n    \"\"\"\n    Lower Triangular matrix filled with ones and zeroes\n    \"\"\"\n    return np.fromfunction(lambda i, j:  1 * np.greater_equal(i , j),\n                           shape=(n, n),\n                           dtype=int)\n\n\n\nCode\nprint(matrix2latex(up_triangular_matrix(5)))\n\n\\[\n\\left(\n   \\begin{array}{rrrrr}\n      1 & 1 & 1 & 1 & 1 \\\\\n      0 & 1 & 1 & 1 & 1 \\\\\n      0 & 0 & 1 & 1 & 1 \\\\\n      0 & 0 & 0 & 1 & 1 \\\\\n      0 & 0 & 0 & 0 & 1 \\\\\n   \\end{array}\n\\right)\n\\]"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Volcanic Eruptions in the Holocene Period\n\n\n\nR\n\n\nkaggle\n\n\nEDA\n\n\n\nData Exploration\n\n\n\nEnrique Pérez Herrero\n\n\nAug 3, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStock Market Confidence Indexes\n\n\n\nR\n\n\npackage\n\n\nstock market\n\n\n\nR Package marketconf\n\n\n\nEnrique Pérez Herrero\n\n\nAug 2, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  }
]